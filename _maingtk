#!/usr/bin/perl
# Evan Miller 8/16/16
# Conglomerate perl DB IO functions in to an application

# includes
use DBI;
use strict;
use warnings;
use diagnostics;
use Gtk3 '-init';
use Glib qw/TRUE FALSE/;

## global vars
# database handler
my $dbh = DBI->connect('DBI:mysql:db_dev0:localhost','dbdev','dbdev');
# label var
my $label = "var label not set";
my $vbox = "";


windisplay();

sub windisplay {
    # set up window
    my $window = Gtk3::Window->new('toplevel');
    $window->set_title("Dev Box");
    $window->set_position("center");
    $window->set_default_size(400,300);
    $window->set_border_width(20);
    $window->signal_connect (delete_event => sub { Gtk3->main_quit });
    
    # set up buttons and their functions
    my $button1 = Gtk3::Button->new("Quit");
    $button1->signal_connect (clicked => \&quitFunction);
    my $button2 = Gtk3::Button->new("Create Table");
    $button2->signal_connect (clicked => \&tableCreate);
    my $button3 = Gtk3::Button->new("Insert Line");
    $button3->signal_connect (clicked => \&tableLineCreate);
    my $button4 = Gtk3::Button->new("DROP Table");
    $button4->signal_connect (clicked => \&tableDrop);
    my $button5 = Gtk3::Button->new("Get Table");
    $button5->signal_connect (clicked => \&tablePrint, "Players");

    # set up horizontal box
    my $hbox = Gtk3::Box->new("horizontal", 5);
    $hbox->set_homogeneous (TRUE);
    $hbox->pack_start($button1, TRUE, TRUE, 0);
    $hbox->pack_start($button2, TRUE, TRUE, 0);
    $hbox->pack_start($button3, TRUE, TRUE, 0);
    $hbox->pack_start($button4, TRUE, TRUE, 0);
    $hbox->pack_start($button5, TRUE, TRUE, 0);
    
    # set up vertical superbox
    $vbox = Gtk3::Box->new("vertical", 5);
    # add horizontal box
    $vbox->add($hbox);
    
    # set label & add
    $label = Gtk3::Label->new("Hi, welcome!");
    $vbox->add($label);

    $window->add($vbox);

    $window->show_all;


    Gtk3->main;

}

sub quitFunction {
#    say "Exiting...";
    Gtk3->main_quit;
    return FALSE;
}

sub tableCreate {
    sub tableCreateLocale {
        my $sql = qq/CREATE TABLE `Locale` (
        `varID`         int(11)         NOT NULL    auto_increment,
        `varName`       varchar(50)     NOT NULL    default '',
        `varDefMod`     int(2)          NOT NULL    default 0,
        `varOffMod`     int(2)          NOT NULL    default 0,
        `varMidMod`     int(2)          NOT NULL    default 0,
        `varGKMod`      int(2)          NOT NULL    default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreatePlayers {
        my $sql = qq/CREATE TABLE `Players` (
        `varID`         int(11)         NOT NULL    auto_increment,
        `varName`       varchar(25)     NOT NULL    default '',
        `varHome`       int(11)         NOT NULL    default 0,
        `varDef`        int(3)          NOT NULL    default 0,
        `varOff`        int(3)          NOT NULL    default 0,
        `varMid`        int(3)          NOT NULL    default 0,
        `varGK`         int(3)          NOT NULL    default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreateTeams {
        my $sql = qq/CREATE TABLE `Teams` (
        `varID`         int(11)         NOT NULL    auto_increment,
        `varName`       varchar(25)     NOT NULL    default '',
        `varHome`       int(11)         NOT NULL    default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreateRosters {
        my $sql = qq/CREATE TABLE `Rosters` (
        `transID`       int(11)         NOT NULL    auto_increment,
        `playerID`      int(11)         NOT NULL    default 0,
        `teamID`        int(11)         NOT NULL    default 0,   
        `rosterSpot`    int(11)         NOT NULL    default 0,
        PRIMARY KEY (`transID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    tableCreateLocale();
    tableCreatePlayers();
    tableCreateTeams();
    tableCreateRosters();
    $label->set_label( "Tables created" );
    return TRUE;
}

sub tableLineCreate {
    sub lineCreateLocale {
        my $sql = qq/INSERT INTO Locale (varName, varDefMod, varOffMod, varMidMod, varGKMod)
            values ("Columbus", 4, 3, 2, 2);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreatePlayers {
        my $sql = qq/INSERT INTO Players (varName, varHome, varDef, varOff, varMid, varGK)
            values ("Messi", 1, 9, 8, 7, 6);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
        my $sql = qq/INSERT INTO Players (varName, varHome, varDef, varOff, varMid, varGK)
            values ("Ronaldo", 1, 8, 7, 6, 7);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreateTeams {
        my $sql = qq/INSERT INTO Teams (varName, varHome)
            values ("Kickers", 1);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreateRosters {
        my $sql = qq/INSERT INTO Rosters (playerID, teamID, rosterSpot)
            values (1, 1, 1);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    lineCreateLocale();
    lineCreatePlayers();
    lineCreateTeams();
    lineCreateRosters();
    
    $label->set_label( "Created default entries " );
}
    
sub tableDrop {
    my $sql = qq/DROP TABLE Locale, Players, Teams, Rosters;/;
    my $sth = $dbh->prepare($sql);
    #$sth->bind_param(1,"Locale");
    #$sth->bind_param(2,"Players");
    #$sth->bind_param(3,"Teams");
    $sth->execute();
    #tableCreate();
    $label->set_label( "Tables DROPPED and recreated" );
}    

sub tablePrint {
    my $p1 = @_[1]; 
    my $sql = qq/SELECT * FROM $p1/;
    my $sth = $dbh->prepare($sql);
    $sth->execute();
    my ($col1, $col2, $col3, $col4, $col5, $col6);
    $sth->bind_col(1, \$col1);
    $sth->bind_col(2, \$col2);
    $sth->bind_col(3, \$col3);
    $sth->bind_col(4, \$col4);
    $sth->bind_col(5, \$col5);
    $sth->bind_col(6, \$col6);
    while ($sth->fetch) {
        $label->set_label( "ID: $col1, Name: $col2, Def: $col3, Off: $col4, Mid: $col5, GK: $col6" );
    }
    if (!$col1){
    $label->set_label( "Nothing in table." );
    }   
    return TRUE;
}

