#!/usr/bin/perl
# Evan Miller 8/16/16
# Conglomerate perl DB IO functions in to an application

# includes
use DBI;
use strict;
use warnings;
use diagnostics;
use Glib 'TRUE', 'FALSE';
use feature 'say';
use Switch;

## global vars
# database handler
my $dbh = DBI->connect('DBI:mysql:db_dev0:localhost','dbdev','dbdev');
my $numInput = 9;
my $strInput = "";
my $introd = 0;
my $greeting = "Welcome to Socman!";
my $loc = 1;
my $team = 1;



mainFunc();

sub mainFunc {
    while ($numInput != 0) {
        # if intro hasn't been given, give it now
        if ($introd == 0) {
            say $greeting;
            $introd++;
        }
        # set up main menu
        my $mainFuncmenu = "
        1. Travel 
        2. Transfer 
        3. NOT IMPLEMENTED 
        4. Roster 
        5. Add Team
        6. Add Player
        7. Add Locale
        8. Table Create
        81. Table Line Create
        9. Table DROP
        10. Table Print
        0. Exit";
        # say the main menu, then do a switch case scenario to find out what they picked.
        say "$mainFuncmenu"; 
        $numInput = <STDIN>;
        chomp $numInput;
        say "You chose $numInput";
        switch ($numInput) {
            case "1"    { doTravel() }
            case "2"    { doTransfer() }
            case "3"    { doExhib() }
            case "4"    { printRoster() }
            case "5"    { addTeam() }
            case "6"    { addPlayer() }
            case "7"    { addLocale() }
            case "8"    { tableCreate() }
            case "81"   { tableLineCreate() }
            case "9"   { tableDrop() }
            case "10"   { tablePrint() }
            case "0"    { say "Goodybe!" }
            else        { say "Try again." }
        }
    }
    
}
sub doTravel {
    # change location from one site to another.
    say "Traveling from: $loc";
    my $travelTo = 0;
    if (!$_[0]) {
        say "Travel to what location?";
        $travelTo = <STDIN>;
    } else {
        $travelTo = $_[0];
    }
    $loc = $travelTo;
    chomp $loc;
    say "Traveled to: $loc";
}

sub doTransfer {
    # call function with doTransfer(player#,team#) or it will ask for missing info
    my $player = 0;
    my $team = 0;
    if(!$_[0]) {
        say "Which player?";
        $player = <STDIN>;
    } else {
        $player = $_[0];
    }
    if(!$_[1]) {
        say "To which team?"; 
        $team = <STDIN>;
    } else {
        $player = $_[1];
    }
    chomp $player;
    chomp $team;
    say "Player: $player";
    my $oldTeam = getTeam($player);
    my $oldTrans = getTransFromPlayer($player);
    say "Old Team: $oldTeam";
    say "New Team: $team";
    say "Old Trans ID: $oldTrans";
    deleteTrans($oldTrans);
    my $sql = qq/INSERT INTO Rosters (playerID, teamID) values ($player, $team)/;
    my $sth = $dbh->prepare($sql);
    $sth->execute;
    my $newTeam = getTeam($player);
    say "After exec, player is on: $newTeam";
}

sub deleteTrans {
    # delete transaction
    my $trans = 0;
    if (!$_[0]) {
        say "ERROR NO TRANS PROVIDED";
    } else {
        $trans = $_[0];
        chomp $trans;
        my $sql = qq/DELETE FROM Rosters WHERE transID = $trans/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
}

sub getTransFromPlayer {
    my $player = 0;
    my $trans = 0;
    if (!$_[0]) {
        say "ERROR NO PLAYER FOR FUNC getTransFromPlayer";
    } else {
        $player = $_[0];
        chomp $player;
        my $sql = qq/SELECT transID FROM Rosters where playerID = $player/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
        $sth->bind_col(1, \$trans);
        while ($sth->fetch) {
            return $trans;
        }
    }
}
     
sub getTeam {
    my $player = 0;
    my $team = 0;
    if (!$_[0]) {
        say "ERROR NO PLAYER FOR FUNC getTeam";
    } else {
        $player = $_[0];
        chomp $player;
        my $sql = qq/SELECT teamID FROM Rosters where playerID = $player/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
        $sth->bind_col(1, \$team);
        while ($sth->fetch) {
            return $team;
        }
    }
}
     
sub doExhib {
}
sub printRoster {
    say "Which team?";
    $numInput = <STDIN>;
    chomp $numInput;
    my $sql = qq/SELECT * FROM Rosters where teamID = $numInput/;
    my $sth = $dbh->prepare($sql);
    $sth->execute;
    my ($col1, $col2, $col3);
    $sth->bind_col(1, \$col1);
    $sth->bind_col(2, \$col2);
    $sth->bind_col(3, \$col3);
    my $rows = $sth->rows;
    my $count = 0;
    if ($count < $rows) {
        say "Players: $rows";
        while ($sth->fetch) {
            say "TransID: $col1, PlayerID: $col2, TeamID: $col3";
        }
    } else {
        say "No players found.";
    }
}

sub addTeam {
    my ($newTeamName, $newTeamHome);
    if($_[0]) {
        $newTeamName = $_[0];
    } else {
        say "New Team Name: ";
        $newTeamName = <STDIN>;
    }
    if($_[1]) {
        $newTeamHome = $_[1];
    } else {
        say "New Team Home ID: ";
        $newTeamHome = <STDIN>;
    }
    chomp $newTeamName;
    chomp $newTeamHome;
    my $sql = qq/INSERT INTO Teams (varName, varHome) values ($newTeamName, $newTeamHome)/;
    my $sth = $dbh->prepare($sql);
    $sth->execute;
    say "New team created!";
    # TODO HERE: Get Team ID and do getTeamHome and getTeamName to print new data from DB
}

sub getTeamHome {
    if ($_[0]) {
        my $team = $_[0];
    } else {
        say "Get Home of which team ID?";
        my $team = <STDIN>;
    }
    chomp $team;
    my $sql = qq/SELECT varHome FROM Teams WHERE varID = $team/;
    my $sth = $dbh->prepare($sql);
    my $home = 0;
    $sth->execute;
    $sth->bind_col(1, \$home);
    while ($sth->fetch) {
        return $home;
    }
}
        
sub getTeamName {
    if ($_[0]) {
        my $team = $_[0];
    } else {
        say "Get Name of which team ID?";
        my $team = <STDIN>;
    }
    chomp $team;
    my $sql = qq/SELECT varName FROM Teams WHERE varID = $team/;
    my $sth = $dbh->prepare($sql);
    my $name = 0;
    $sth->execute;
    $sth->bind_col(1, \$name);
    while ($sth->fetch) {
        return $name;
    }
}

sub addLocale {
    # dec vars
    my ($newLocName, $newDefMod, $newOffMod, $newMidMod, $newGKMod);
    # Get Name
    if($_[0]) {
        $newLocName = $_[0];
    } else {
        say "New Loc Name: ";
        $newLocName = <STDIN>;
    }
    # Get Def Mod
    if($_[1]) {
        $newDefMod = $_[1];
    } else {
        say "New Def Mod: ";
        $newDefMod = <STDIN>;
    }
    # Get Off Mod
    if($_[2]) {
        $newOffMod = $_[2];
    } else {
        say "New Off Mod: ";
        $newOffMod = <STDIN>;
    }
    # Get Mid Mod
    if($_[3]) {
        $newMidMod = $_[3];
    } else {
        say "New Mid Mod: ";
        $newMidMod = <STDIN>;
    }
    # Get GK Mod
    if($_[4]) {
        $newGKMod = $_[4];
    } else {
        say "New GK Mod: ";
        $newGKMod = <STDIN>;
    }
    chomp $newLocName;
    chomp $newDefMod;
    chomp $newOffMod;
    chomp $newMidMod;
    chomp $newGKMod;
    my $sql = qq/INSERT INTO Locales (varName, varDefMod, varOffMod, varMidMod, varGKMod) values ($newLocName, $newDefMod, $newOffMod, $newMidMod, $newGKMod)/;
    my $sth = $dbh->prepare($sql);
    $sth->execute;
    say "New Location created!";
    # TODO HERE: Get Loc ID and do getLocHome and geteamName to print new data from DB
}



sub tableCreate {
    sub tableCreateLocales {
        my $sql = qq/CREATE TABLE `Locales` (
        `varID`         int(11)         NOT NULL UNIQUE     auto_increment,
        `varName`       varchar(50)     NOT NULL UNIQUE     default '',
        `varDefMod`     int(2)          NOT NULL            default 0,
        `varOffMod`     int(2)          NOT NULL            default 0,
        `varMidMod`     int(2)          NOT NULL            default 0,
        `varGKMod`      int(2)          NOT NULL            default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreatePlayers {
        my $sql = qq/CREATE TABLE `Players` (
        `varID`         int(11)         NOT NULL UNIQUE     auto_increment,
        `varName`       varchar(25)     NOT NULL            default '',
        `varHome`       int(11)         NOT NULL            default 0,
        `varDef`        int(3)          NOT NULL            default 0,
        `varOff`        int(3)          NOT NULL            default 0,
        `varMid`        int(3)          NOT NULL            default 0,
        `varGK`         int(3)          NOT NULL            default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreateTeams {
        my $sql = qq/CREATE TABLE `Teams` (
        `varID`         int(11)         NOT NULL UNIQUE     auto_increment,
        `varName`       varchar(25)     NOT NULL UNIQUE     default '',
        `varHome`       int(11)         NOT NULL            default 0,
        PRIMARY KEY (`varID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    sub tableCreateRosters {
        my $sql = qq/CREATE TABLE `Rosters` (
        `transID`       int(11)         NOT NULL UNIQUE     auto_increment,
        `playerID`      int(11)         NOT NULL UNIQUE     default 0,
        `teamID`        int(11)         NOT NULL            default 0,   
        `rosterSpot`    int(11)         NOT NULL            default 0,
        PRIMARY KEY (`transID`)
        );/;
        my $sth = $dbh->prepare($sql);
        $sth->execute;
    }
    tableCreateLocales();
    tableCreatePlayers();
    tableCreateTeams();
    tableCreateRosters();
    return TRUE;
}

sub tableLineCreate {
    sub lineCreateLocales {
        my $sql = qq/INSERT INTO Locales (varName, varDefMod, varOffMod, varMidMod, varGKMod)
            values ("Columbus", 4, 3, 2, 2);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreatePlayers {
        my $sql = qq/INSERT INTO Players (varName, varHome, varDef, varOff, varMid, varGK)
            values ("Messi", 1, 9, 8, 7, 6);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreateTeams {
        my $sql = qq/INSERT INTO Teams (varName, varHome)
            values ("Kickers", 1);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    sub lineCreateRosters {
        my $sql = qq/INSERT INTO Rosters (playerID, teamID, rosterSpot)
            values (1, 1, 1);/;
        my $sth = $dbh->prepare($sql);
        $sth->execute();
    }
    lineCreateLocales();
    lineCreatePlayers();
    lineCreateTeams();
    lineCreateRosters();
    return TRUE;
}
    
sub tableDrop {
    say "Which tables? ALL for all.";
    my $strInput = <STDIN>;
    my $sql = "";
    chomp $strInput;
    if ($strInput eq "ALL") {
        say "Dropping ALL tables";
        $sql = qq/DROP TABLE Locales, Players, Teams, Rosters;/;
    } else {
        say "Dropping table $strInput";
        $sql = qq/DROP TABLE $strInput;/;
    }
    my $sth = $dbh->prepare($sql);
    $sth->execute();
    say "Tables DROPPED";
}    

sub tablePrint {
    my $strInput = "";
    if (!$_[0]) {
        say "Print which table?";
        $strInput = <STDIN>; 
    } else {
        $strInput = $_[0];
    }
    chomp $strInput;
    my $sql = qq/SELECT * FROM $strInput/;
    my $sth = $dbh->prepare($sql);
    $sth->execute();
    my ($col1, $col2, $col3, $col4, $col5, $col6);
    $sth->bind_col(1, \$col1);
    $sth->bind_col(2, \$col2);
    $sth->bind_col(3, \$col3);
    $sth->bind_col(4, \$col4);
    $sth->bind_col(5, \$col5);
    $sth->bind_col(6, \$col6);
    while ($sth->fetch) {
    say "ID: $col1, Name: $col2, Def: $col3, Off: $col4, Mid: $col5, GK: $col6";
    }
    if (!$col1) {
    say "Nothing in table.";
    }   
    return TRUE;
}

